name: CI latest image

on:
    pull_request:
        types: [opened, reopened, edited]
    workflow_dispatch:

jobs:
    test-unit:
        name: Run unit tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.x"

            - name: Install dependencies
              run: |
                  python3 -m pip install --upgrade pip
                  pip3 install -r requirements.txt
            - name: Test with pytest
              run: |
                  python3 -m unittest tests/*.py

    test-sast:
        name: Run SAST tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Run gitleaks
              uses: gitleaks/gitleaks-action@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Install bandit package
              if: always()
              run: pip3 install bandit

            - name: Run bandit
              run: bandit -r .

    test-dast:
        name: Run DAST tests
        runs-on: ubuntu-latest
        permissions: write-all
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Deploy with use of SSH
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SERVER_ADDRESS }}
                  username: ${{ secrets.SERVER_USER }}
                  password: ${{ secrets.SERVER_PASSWORD }}
                  port: 22
                  script: |
                      cd tbo-projekt
                      git checkout master
                      git pull
                      docker compose -f compose-latest.yaml down
                      docker build --build-arg="PORT=5001" -t godot911/tbo-projekt:latest .
                      docker compose -f compose-latest.yaml up -d

            - name: ZAP Scan
              uses: zaproxy/action-full-scan@v0.8.0
              with:
                  target: ${{ secrets.SERVER_URI }}
                  allow_issue_writing: false
                  fail_action: true

    test-sca:
        name: Run SCA tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Run dependency check
              uses: dependency-check/Dependency-Check_Action@main
              with:
                  project: "tbo-projekt"
                  path: "."
                  format: "HTML"
                  out: "reports"

            - name: Upload dependency check results
              uses: actions/upload-artifact@master
              with:
                  name: Dependency check report
                  path: ${{github.workspace}}/reports
